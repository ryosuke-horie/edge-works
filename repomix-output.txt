This file is a merged representation of a subset of the codebase, containing files not matching ignore patterns, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching these patterns are excluded: .next/**, .open-next/**, .wrangler/**, node_modules/**, bun.lock, package-lock.json
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
src/
  app/
    globals.css
    layout.tsx
    page.tsx
.gitignore
cloudflare-env.d.ts
next.config.mjs
open-next.config.ts
package.json
postcss.config.mjs
README.md
tailwind.config.ts
tsconfig.json
wrangler.jsonc

================================================================
Files
================================================================

================
File: src/app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

================
File: src/app/layout.tsx
================
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="en" data-oid="4m7a-ak">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        data-oid="ejgmdd2"
      >
        {children}
      </body>
    </html>
  );
}

================
File: src/app/page.tsx
================
import Image from "next/image";

export default function Home() {
  return (
    <div
      className="min-h-screen bg-gradient-to-b from-blue-50 to-white dark:from-gray-900 dark:to-gray-800"
      data-oid="7vom6s-"
    >
      <main
        className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"
        data-oid="7_phvxs"
      >
        {/* Hero Section */}
        <div className="py-20 sm:py-24 lg:py-32 text-center" data-oid="x1a-hf6">
          <h1
            className="text-4xl sm:text-5xl lg:text-6xl font-bold text-gray-900 dark:text-white mb-6"
            data-oid="6.i2kfo"
          >
            良質なホームページを
            <br className="sm:hidden" data-oid="4j3rnsc" />
            <span
              className="text-blue-600 dark:text-blue-400"
              data-oid="lx_lp3k"
            >
              安く・手軽に
            </span>
          </h1>
          <p
            className="text-xl sm:text-2xl text-gray-600 dark:text-gray-300 mb-12"
            data-oid="mi91-4-"
          >
            月額3,000円でプロフェッショナルなウェブサイトを
          </p>
          <a
            href="#contact"
            className="inline-block bg-blue-600 text-white px-8 py-4 rounded-full text-lg font-semibold hover:bg-blue-700 transition-colors"
            data-oid="vk1zuay"
          >
            お問い合わせ
          </a>
        </div>

        {/* Features Section */}
        <div
          className="py-16 grid grid-cols-1 md:grid-cols-3 gap-8"
          data-oid="4qonqoi"
        >
          <div
            className="text-center p-6 rounded-xl bg-white dark:bg-gray-800 shadow-lg"
            data-oid="w-.kbdp"
          >
            <div className="text-3xl mb-4" data-oid="a3tc1qu">
              💰
            </div>
            <h3 className="text-xl font-semibold mb-2" data-oid="4o-d7.z">
              初期費用0円
            </h3>
            <p className="text-gray-600 dark:text-gray-300" data-oid="r7vqcjv">
              ドメイン取得からホスティングまで月額に含まれています
            </p>
          </div>
          <div
            className="text-center p-6 rounded-xl bg-white dark:bg-gray-800 shadow-lg"
            data-oid="-mz90v7"
          >
            <div className="text-3xl mb-4" data-oid=":9qbugz">
              🎨
            </div>
            <h3 className="text-xl font-semibold mb-2" data-oid="js2t0:6">
              オリジナルデザイン
            </h3>
            <p className="text-gray-600 dark:text-gray-300" data-oid="waiwncu">
              テンプレートではない、あなただけのデザイン
            </p>
          </div>
          <div
            className="text-center p-6 rounded-xl bg-white dark:bg-gray-800 shadow-lg"
            data-oid="z797uaj"
          >
            <div className="text-3xl mb-4" data-oid="m7n70.x">
              📱
            </div>
            <h3 className="text-xl font-semibold mb-2" data-oid="8.sog54">
              モバイルファースト
            </h3>
            <p className="text-gray-600 dark:text-gray-300" data-oid="u-kqhju">
              スマートフォンでの表示を最適化
            </p>
          </div>
        </div>

        {/* Price Section */}
        <div className="py-16 text-center" data-oid="636v1-1">
          <h2 className="text-3xl font-bold mb-12" data-oid=":vd4._f">
            シンプルな料金プラン
          </h2>
          <div
            className="max-w-lg mx-auto bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8"
            data-oid="skhy0fi"
          >
            <div
              className="text-5xl font-bold text-blue-600 dark:text-blue-400 mb-4"
              data-oid="70dqb_4"
            >
              ¥3,000
              <span
                className="text-lg text-gray-600 dark:text-gray-300"
                data-oid="af.18je"
              >
                /月
              </span>
            </div>
            <ul className="text-left space-y-4 mb-8" data-oid="_ass7m4">
              <li className="flex items-center" data-oid="a7bgvxz">
                <span className="text-green-500 mr-2" data-oid="y9o593-">
                  ✓
                </span>
                最大5ページの制作
              </li>
              <li className="flex items-center" data-oid="m5kc.7z">
                <span className="text-green-500 mr-2" data-oid="p27ogfs">
                  ✓
                </span>
                ドメイン・サーバー費用込み
              </li>
              <li className="flex items-center" data-oid="w10z50v">
                <span className="text-green-500 mr-2" data-oid="_.kz0bl">
                  ✓
                </span>
                SSL証明書対応
              </li>
              <li className="flex items-center" data-oid="5_q65i6">
                <span className="text-green-500 mr-2" data-oid="zbnaj7s">
                  ✓
                </span>
                保守・運用サポート
              </li>
            </ul>
            <a
              href="#contact"
              className="inline-block bg-blue-600 text-white px-8 py-3 rounded-full font-semibold hover:bg-blue-700 transition-colors"
              data-oid="t0hh3qv"
            >
              お問い合わせ
            </a>
          </div>
        </div>
      </main>

      <footer className="bg-gray-50 dark:bg-gray-900 py-12" data-oid="r8c13..">
        <div
          className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center"
          data-oid=":wi1wta"
        >
          <div className="text-2xl font-bold mb-4" data-oid="2wn9skm">
            Edge works
          </div>
          <p className="text-gray-600 dark:text-gray-400" data-oid="be4zot_">
            個人事業主のためのウェブサイト制作サービス
          </p>
        </div>
      </footer>
    </div>
  );
}

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

# OpenNext
/.open-next

# wrangler files
.wrangler
.dev.vars

================
File: cloudflare-env.d.ts
================
// Generated by Wrangler
// by running `wrangler types --env-interface CloudflareEnv cloudflare-env.d.ts`

interface CloudflareEnv {
}

================
File: next.config.mjs
================
/** @type {import('next').NextConfig} */
const nextConfig = {};

export default nextConfig;

// added by create cloudflare to enable calling `getCloudflareContext()` in `next dev`
import { initOpenNextCloudflareForDev } from '@opennextjs/cloudflare';
initOpenNextCloudflareForDev();

================
File: open-next.config.ts
================
import cache from "@opennextjs/cloudflare/kvCache";

const config = {
  default: {
    override: {
      wrapper: "cloudflare-node",
      converter: "edge",
      incrementalCache: async () => cache,
      tagCache: "dummy",
      queue: "dummy",
    },
  },

  middleware: {
    external: true,
    override: {
      wrapper: "cloudflare-edge",
      converter: "edge",
      proxyExternalRequest: "fetch",
    },
  },

  dangerous: {
    enableCacheInterception: false,
  },
};

export default config;

================
File: package.json
================
{
	"name": "edge-works",
	"version": "0.1.0",
	"private": true,
	"scripts": {
		"dev": "next dev",
		"build": "next build",
		"start": "next start",
		"lint": "next lint",
		"deploy": "opennextjs-cloudflare && wrangler deploy",
		"preview": "opennextjs-cloudflare && wrangler dev",
		"cf-typegen": "wrangler types --env-interface CloudflareEnv cloudflare-env.d.ts"
	},
	"dependencies": {
		"next": "14.2.23",
		"react": "^18",
		"react-dom": "^18"
	},
	"devDependencies": {
		"@cloudflare/workers-types": "^4.20250224.0",
		"@opennextjs/cloudflare": "^0.5.4",
		"@types/node": "^20",
		"@types/react": "^18",
		"@types/react-dom": "^18",
		"postcss": "^8",
		"tailwindcss": "^3.4.1",
		"typescript": "^5",
		"wrangler": "^3.110.0"
	}
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: README.md
================
# WEB制作事業用ホームページ

## コンセプト・事業原案

1. サービス概要

1-1. 事業コンセプト
	•	サービス名（屋号）: Edge works
	•	ミッション: 個人事業主が安価かつ素人感のない高品質なHPを簡単に持てるようにする。
	•	特徴:
	•	初期費用なし、月額3,000円のみ。
	•	ドメイン取得、ホスティング、保守・運用まで一貫サポート。
	•	テンプレートではなくオーダーメイドで作成。
	•	スマホ対応を前提としたモバイルファーストなデザイン。

1-2. 背景と狙い
	•	従来の問題点
	•	一般的なWEB制作は初期費用が高額（10万円以上）になりがち。
	•	保守費用も別途かかるケースが多い。
	•	Edge worksの解決策
	•	生成AIなどを活用した効率的な制作体制。
	•	必要最小限の機能に絞り、コストを最小化。
	•	月額制3,000円のみで、面倒なサーバー・ドメイン管理をすべて代行。

2. ターゲット・強み

2-1. ターゲット顧客
	•	個人事業主
	•	Googleマップの店舗情報や法令対応としてHPが必要だが、初期費用が高いサービスは避けたい。
	•	安価でも最低限「今風のデザイン」「素人感のないサイト」を希望。
	•	詳細なSEOや高度な機能を求めていない（またはそこまで予算をかけたくない）。

2-2. 競合優位性
	•	わかりやすい月額3,000円ポッキリ
	•	隠れた追加費用や複雑なプランがない。
	•	オーダーメイドデザイン
	•	テンプレートではなく、独自にデザインを作成。
	•	モバイルファーストでスマホ表示に最適化。
	•	丸っとお任せ
	•	サーバー・ドメイン管理、SSL更新なども一括で代行。
	•	面倒な手続きや技術的負担が一切不要。

3. プラン・料金体系

3-1. 基本プラン（3,000円／月）
	•	初期費用: 0円
	•	制作ページ数: 最大5ページ
	•	ドメイン・サーバー管理費用: 月額3,000円に含む
	•	SEO内部施策: 基本的なmetaタグや構造を最適化
	•	保守・運用: 定期的なアップデート・SSL更新などを代行

3-2. オプション・追加費用
	•	お問い合わせフォーム: ＋1,000円／月
	•	または、Form系サービスへのリンクで対応（無料）
	•	大幅なデザイン変更・ページ追加: 2,000円〜(都度見積もり)
	•	翌月以降の月額が変動することはなし
	•	納品後の修正対応: 軽微なものはサポート内で対応可能。大幅改修は別途見積もり。

4. サービス内容・制作フロー

4-1. 提供範囲
	•	デザイン: オリジナルのデザイン案を作成
	•	コーディング: HTML/CSS/JavaScriptを中心に、静的サイトとして制作
	•	ホスティング: サーバー選定・セットアップ一式
	•	ドメイン取得・管理: 独自ドメインの取得・更新代行
	•	SSL証明書対応: HTTPS化で安全・信頼性を確保
	•	保守: サーバー監視やセキュリティ更新などの運用管理

4-2. 制作の流れ
	1.	お問い合わせ・ヒアリング
	•	専用フォーム or メールで希望のコンセプト・デザインの要望を伺う
	•	必要に応じてGoogle Meet等で打合せ
	2.	仮デザイン案の作成・提案
	•	仮のドメイン（テスト用URL）でサイトを確認可能
	3.	デザイン・コンテンツ修正
	•	お客様のフィードバックをもとに細部を調整
	4.	ドメイン取得・公開
	•	ご希望のドメインを取得し、本番環境へ移行
	5.	納品・運用開始
	•	最短3営業日〜のスピード対応可（要ヒアリング内容の確定）

5. 実績・今後のポートフォリオ
	•	現在の制作実績:
	•	パーソナルジムサイトを受注中。完成後、許可を得て公開予定。
	•	将来的なポートフォリオ:
	•	サイトを増やし、主要クライアントの一覧を掲載予定。
	•	個人事業ならではのフットワーク
	•	実績が増え次第、事例を随時アップデート。

6. サポート体制・連絡方法

6-1. サポート体制
	•	メールサポート: 常時受け付け
	•	Google Meet: ご希望の場合、オンラインミーティング対応
	•	対応時間: 特に制限なし（メールは随時確認）

6-2. 連絡方法・ヒアリング
	•	専用フォーム: お客様情報・コンセプト記入欄を用意
	•	電話対応: 行わない（低コスト化・効率化のため）
	•	LINE導線: 必要に応じて対応可（個人事業主には便利）

7. デザイン方針・サイトイメージ
	•	全体テーマカラー: 青白系統で誠実さ・プロフェッショナル感を演出
	•	ファーストビュー演出: 背景動画＋キャッチコピーの重ね表示
	•	「良質なホームページを安く・手軽に」などを大きく配置
	•	モバイルファースト: スマートフォンでの閲覧を最優先に最適化

8. キャッチコピー例
	1.	「良質なホームページを安く・手軽に」
	2.	「月額3,000円でホームページ制作」
	3.	「テンプレートを使わないオリジナルデザイン」

上記のいずれか、または組み合わせて利用し、ファーストビューで強く訴求。

9. 運営者情報
	•	屋号: Edge works
	•	代表者: 個人事業主（WEBエンジニアとしての経歴あり）
	•	所在地・連絡先: メールアドレスを中心に対応（電話は非対応）
	•	理念: 「誰にでも安価で高性能なホームページを」

10. よくある質問（例）
	1.	Q. 本当に初期費用は0円ですか？
	•	A. はい。ドメイン取得費・デザイン費も月額3,000円に含んでいます。
	2.	Q. 依頼からどのくらいで公開できますか？
	•	A. 最短3営業日〜、ヒアリングや素材準備の状況次第です。
	3.	Q. お問い合わせフォームは設置できますか？
	•	A. 月額+1,000円でご利用可能です。またはFormサービスをリンクで利用すれば無料です。
	4.	Q. 大幅なデザイン変更が必要になったら？
	•	A. 都度見積もりいたしますが、月額自体は変わりません。

11. お問い合わせ・次のステップ
	•	お問い合わせフォーム
	•	希望イメージ・コンセプト・参考サイトなどあればご記入を。
	•	Google Meetでの打合せ可
	•	画面共有でデザイン案を確認しながら調整。
	•	メールアドレス
	•	迅速に回答を心がけます。お急ぎの場合もお気軽にご連絡ください。

================
File: tailwind.config.ts
================
import type { Config } from "tailwindcss";

const config: Config = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        background: "var(--background)",
        foreground: "var(--foreground)",
      },
    },
  },
  plugins: [],
};
export default config;

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    },
    "types": [
        "@cloudflare/workers-types/2023-07-01"
    ]
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}

================
File: wrangler.jsonc
================
/**
 * For more details on how to configure Wrangler, refer to:
 * https://developers.cloudflare.com/workers/wrangler/configuration/
 */
{
	"$schema": "node_modules/wrangler/config-schema.json",
	"name": "edge-works",
	"main": ".open-next/worker.js",
	"compatibility_date": "2024-09-26",
	"compatibility_flags": [
		"nodejs_compat"
	],
	"minify": true,
	"assets": {
		"binding": "ASSETS",
		"directory": ".open-next/assets"
	},
	"observability": {
		"enabled": true
	}
  /**
   * Smart Placement
   * Docs: https://developers.cloudflare.com/workers/configuration/smart-placement/#smart-placement
   */
  // "placement": { "mode": "smart" },

  /**
   * Bindings
   * Bindings allow your Worker to interact with resources on the Cloudflare Developer Platform, including
   * databases, object storage, AI inference, real-time communication and more.
   * https://developers.cloudflare.com/workers/runtime-apis/bindings/
   */

  /**
   * Environment Variables
   * https://developers.cloudflare.com/workers/wrangler/configuration/#environment-variables
   */
  // "vars": { "MY_VARIABLE": "production_value" },
  /**
   * Note: Use secrets to store sensitive data.
   * https://developers.cloudflare.com/workers/configuration/secrets/
   */

  /**
   * Static Assets
   * https://developers.cloudflare.com/workers/static-assets/binding/
   */
  // "assets": { "directory": "./public/", "binding": "ASSETS" },

  /**
   * Service Bindings (communicate between multiple Workers)
   * https://developers.cloudflare.com/workers/wrangler/configuration/#service-bindings
   */
  // "services": [{ "binding": "MY_SERVICE", "service": "my-service" }]
}



================================================================
End of Codebase
================================================================
